/* ExpensesDetailsView.module.css */

.ExpensesDetailsView {
  display: flex;
  flex-direction: column;
  gap: var(--spL);
}

.backButton {
  display: flex;
  align-items: center;
  gap: var(--spM);
  cursor: pointer;
  margin-bottom: var(--spS);
  color: var(--accent);
}

.backButton p {
  color: var(--accent);
  font-size: var(--sM);
  margin: 0;
}

.dashboardContainer {
  display: flex;
  flex-direction: column;
  gap: var(--spM); /* Espacio entre título y fila de tarjetas */
  background-color: var(--cBlackV2);
  padding: var(--spL);
  border-radius: var(--bRadiusL);
  border: 0.5px solid var(--cWhiteV1);
}

.dashboardTitle {
  font-size: var(--sXxl);
  font-weight: var(--bBold);
  color: var(--cWhite);
  margin: 0;
}

/* --- Fila de Estadísticas ÚNICA y Flexible --- */
.allStatsRow {
  display: flex;
  flex-wrap: wrap; /* Permite que las tarjetas salten de línea */
  /* NUEVO: gap controla el espacio horizontal Y vertical entre tarjetas */
  /* Ajusta este valor para aumentar/disminuir el margen general */
  gap: var(--spM); /* Ejemplo: 16px. Puedes usar var(--spL) si quieres más espacio */
  width: 100%;
  /* align-items: stretch; */ /* Puedes descomentar si quieres que las tarjetas tengan la misma altura si su contenido varía */
}

/* Eliminados: .statGroupLeft, .statGroupRight, .divider */

.statCard {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: var(--cBlackV2);
  padding: var(--spM);
  border-radius: var(--bRadiusL);
  border: 0.5px solid var(--cWhiteV1);
  /* NUEVO: Control de flexibilidad para cada tarjeta */
  /* Crecer (1), Encoger (1), Base ideal de 160px */
  flex: 1 1 160px;
  /* Ancho mínimo para forzar el salto de línea */
  min-width: 160px;
  height: 94px; /* O considera min-height si el texto puede necesitar más espacio */
  /* min-height: 94px; */
  overflow: hidden;
  box-sizing: border-box; /* Incluye padding y borde en el tamaño */
}
/* --- Fin Fila de Estadísticas --- */

.statContent {
  display: flex;
  flex-direction: column;
  gap: var(--spS);
  flex: 1; /* Ocupa espacio disponible dentro de la card */
  min-width: 0; /* Permite encogerse */
  overflow: hidden;
}

.statValue {
  font-size: var(--sXl);
  font-weight: var(--bSemibold);
  color: var(--cWhite);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.statLabel {
  font-size: var(--sL);
  color: var(--cWhiteV1);
  white-space: normal;
  word-break: break-word;
  line-height: 1.3;
}

.statIconContainer {
  width: 40px;
  height: 40px;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(255, 255, 255, 0.15);
  border-radius: var(--bRadiusL);
  margin-left: var(--spS);
  flex-shrink: 0;
}

/* --- Iconos y colores (sin cambios) --- */
.iconDefault { color: rgba(255, 255, 255, 0.8); }
.iconPaid { background-color: rgba(0, 175, 144, 0.2); }
.iconPaidColor { color: rgb(0, 175, 144); }
.iconOverdue { background-color: rgba(218, 93, 93, 0.2); }
.iconOverdueColor { color: rgb(218, 93, 93); }
.iconPenalty { background-color: rgba(243, 127, 61, 0.2); }
.iconPenaltyColor { color: rgb(243, 127, 61); }
/* --- Fin Iconos y colores --- */


/* --- Media Queries Simplificadas --- */
/* Ya no necesitamos la media query de 1300px para apilar grupos */

/* Ajustes menores para pantallas medianas/pequeñas si son necesarios */
@media (max-width: 768px) {
  .dashboardContainer {
     padding: var(--spM); /* Menos padding general */
  }
  .dashboardTitle {
    font-size: var(--sXl); /* Título más pequeño */
  }
}

@media (max-width: 480px) {
   /* En pantallas muy pequeñas, las tarjetas ya estarán una por línea */
   /* debido al flex-wrap y su min-width */
   .statCard {
     /* Opcional: forzar ancho completo si flex-basis no es suficiente */
     /* flex-basis: 100%; */
     /* Opcional: reducir padding interno */
     padding: var(--spS);
   }
   .statValue {
     font-size: var(--sL); /* Valor más pequeño */
   }
   .statLabel {
      font-size: var(--sM); /* Etiqueta más pequeña */
   }
   .dashboardContainer {
     padding: var(--spS); /* Aún menos padding */
   }
   .dashboardTitle {
     font-size: var(--sL); /* Título aún más pequeño */
   }
}
/* --- Fin Media Queries --- */


/* Estilos para el header (Sin cambios) */
.header { background-color: var(--cBlackV2) !important; display: flex; justify-content: space-between; min-height: 124px; }
.header > section > div:nth-child(1) { font-size: var(--sL); }
.header > section > div:nth-child(2) { color: var(--cWhiteV1) }

/* Estilos para render view (Sin cambios) */
.renderView > div { display: flex; padding: var(--spL); gap: var(--spL); align-items: center; }
@media (max-width: 750px) { .renderView > div { flex-direction: column; } }
.renderView > div > div { display: flex; flex-direction: column; justify-content: center; align-items: center; gap: var(--spL); }
.renderView > div > section { padding: var(--spM); background-color: var(--cBlackV1); border-radius: 8px; width: 100%; max-width: 500px; } /* Hacer ancho 100% con max-width */
.renderView > div > section > div { display: flex; margin-bottom: 16px; font-size: var(--sM); }
.renderView > div > section > div > p:nth-child(odd) { flex: 1; color: var(--cWhiteV1); }
.renderView > div > section > div > p:nth-child(even) { flex: 1; text-align: right; color: var(--cWhite); }

/* --- Estilos para badges de estado (Mantenidos de la corrección anterior) --- */
.statusBadge {
  font-weight: var(--bMedium);
  padding: 6px var(--spM);
  border-radius: 4px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  width: fit-content;
  /* min-width: 110px; */ /* Mantenido ELIMINADO */
  white-space: normal; /* Permitir wrap */
  line-height: 1.3;
  box-sizing: border-box;
}
.statusP { background-color: var(--accentBg); color: var(--cPrimary); }
.statusS { background-color: var(--cHoverWarning); color: var(--cWarning); }
.statusR { background-color: var(--cHoverError); color: var(--cError); }
.statusE { background-color: var(--cHoverInfo); color: var(--cInfo); }
.statusA { background-color: rgba(0, 123, 255, 0.2); color: var(--info); }
.statusM { background-color: var(--cMediumAlertHover); color: var(--cMediumAlert); }
/* --- Fin Badges --- */