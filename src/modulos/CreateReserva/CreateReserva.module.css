.pageWrapper {
  width: 100%; /* Ocupa todo el ancho de la ventana */
  min-height: 100vh; /* Opcional: asegura altura mínima */
  position: relative; /* Contexto para el botón absoluto */
  padding-top: 50px; /* Espacio reservado arriba para el botón. Ajusta '50px' si es necesario */
  box-sizing: border-box; /* Incluye padding en el tamaño total */
}

.createReservaContainer {
  display: flex;
  flex-direction: column;
  gap: var(--spL);
  width: 100%;
  max-width: 900px;
  margin: 0 auto; /* Centra este contenedor DENTRO del pageWrapper */
  padding: var(--spL);
  color: var(--cWhite);
  font-family: var(--fPrimary);
}

.header {
  display: flex;
  flex-direction: column;
  gap: var(--spM); /* 0.75rem -> 12px */
}

.backButton {
  position: absolute; /* Posición absoluta */
  top: var(--spL); /* Distancia desde arriba del pageWrapper */
  left: var(
    --spL
  ); /* Distancia desde la IZQUIERDA del pageWrapper (borde de PÁGINA) */
  /* Estilos visuales */
  display: flex;
  align-items: center;
  gap: var(--spS);
  cursor: pointer;
  color: var(--cAccent); /* O el color que prefieras */
  font-size: var(--sM);
  background: none;
  border: none;
  padding: 0;
  width: fit-content;
  z-index: 10; /* Asegura que esté visible */
}
.backButton:hover {
  color: var(--cWhiteV2); /* O el color hover que prefieras */
}

.header h1 {
  font-size: var(--sXxl); /* 24px */
  font-weight: var(--bSemibold); /* 600 */
  color: var(--cWhite); /* Asegura color blanco */
}

.progressContainer {
  display: flex;
  flex-direction: column;
  gap: var(--spS); /* 0.5rem -> 8px */
  margin-top: var(--spS); /* Añade espacio si es necesario */
}

.progressBar {
  height: 7px;
  background-color: var(--cBlackV1); /* #292929 */
  border-radius: var(--bRadiusM); /* 1rem -> 16px */
  overflow: hidden;
}

.progressFill {
  height: 100%;
  /* Color inicial verde oscuro, podría cambiar con JS/clases */
  background-color: var(--cBigSidebar); /* #246950 */
  transition: width 0.3s ease-in-out;
}
.formCard {
  display: flex;
  flex-direction: column;
  gap: var(--spXl); /* 1.5rem -> 24px */
  background-color: var(--cBlackV2); /* #333536 */
  padding: var(--spL); /* 1rem -> 16px */
  border-radius: var(--bRadiusM); /* 1rem -> 16px */
  border: var(--bWidth) solid var(--cWhiteV1); /* 0.5px solid #a7a7a7 -> usamos 1px y variable */
}

.stepIndicator {
  font-size: var(--sM); /* 14px */
  color: var(--cWhite); /* #f0f0f0 */
  align-self: flex-start;
  margin-bottom: calc(-1 * var(--spL)); /* -1rem (ajusta según diseño exacto) */
  padding-left: var(
    --spS
  ); /* Añade un poco de padding para que no pegue al borde */
}
.stepIndicatorText {
  /* Estilo para el texto del paso */
  font-size: var(--sM); /* 14px */
  color: var(--cWhite); /* #f0f0f0 */
  margin-bottom: var(--spXs); /* Espacio antes de la barra */
  /* align-self: flex-start; Opcional */
}

.stepContent {
  display: flex;
  flex-direction: column;
  /* Ajusta según el contenido de cada paso (1.5rem -> 24px) */
}

/* --- Estilos Títulos dentro de Pasos --- */
.stepTitle, /* Título del paso */
.step1Content h2,
.step3Content h2, /* Título "Datos del responsable" */
.summaryTitle {
  /* Título "Resumen de la reserva" */
  font-size: var(--sXl); /* 20px (o var(--sL) si prefieres 16px) */
  font-weight: var(--bSemibold); /* 600 */
  color: var(--cWhite); /* Asegura color blanco */
  margin-top: var(--spS); /* 0.5rem */
  margin-bottom: calc(
    -1 * var(--spM)
  ); /* -0.75rem (reduce espacio antes del campo/contenido) */
}
/* Ajuste específico para el primer h2 de paso 1 si es necesario */
.step1Content h2:first-of-type {
  margin-top: 0;
}
/* Ajuste específico para el título del resumen */
.summaryTitle {
  margin-top: var(--spL); /* 1rem */
  margin-bottom: calc(-1 * var(--spS)); /* -0.5rem */
}

/* En CreateReserva.module.css */

/* Contenedor para la info del owner con margen inferior y borde opcional */
.summaryOwnerInfoContainer {
  width: 100%; /* Asegura que ocupe el ancho */
}

/* Contenedor flex principal para la info del owner (avatar/nombre vs estado) */
.summaryOwnerInfo {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

/* Contenedor para Avatar + Texto (Nombre/Unidad) */
.ownerIdentifier {
  display: flex;
  align-items: center;
  gap: var(--spS); /* Espacio entre avatar y texto (ej: 8px) */
}

/* Contenedor para el texto (Nombre y Unidad en columna) */
.ownerText {
  display: flex;
  flex-direction: column;
  gap: 2px; /* Espacio vertical pequeño */
}

/* Estilo Nombre Owner */
.ownerName {
  font-size: var(--sM); /* 14px */
  font-weight: var(--bMedium); /* 500 */
  color: var(--cWhite);
  line-height: 1.2;
}

/* Estilo Unidad Owner */
.ownerUnit {
  font-size: var(--sM); /* 14px */
  font-weight: var(--bRegular); /* 400 */
  color: var(--cWhiteV1); /* Grisáceo */
  line-height: 1.2;
}

/* Estilo Estado Reserva (a la derecha) */
.reservationStatus {
  font-size: var(--sM); /* 14px */
  font-weight: var(--bRegular);
  color: var(--cWhiteV1);
  text-align: right;
  white-space: nowrap; /* Evita que el texto se parta */
  margin-left: var(--spS); /* Pequeño margen por si acaso */
}

.formSection {
  display: flex;
  flex-direction: column;
  gap: var(--spS); /* Espacio entre título y campo */
}
/* --- Estilos Previsualización Área (Paso 1) --- */
.areaPreview {
  display: flex;
  flex-direction: row; /* Lado a lado */
  gap: var(--spL); /* 1rem */
  margin-top: 12px;
  padding: var(--spL);
  border-radius: var(--bRadiusS);
  background-color: var(--cBlackV2); /* Fondo ligeramente diferente opcional */
}

/* Contenedor Imagen */
.imageContainer {
  width: 350px; /* Ancho deseado */
  flex-shrink: 0; /* Evita que se encoja */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spS);
}

.previewImage {
  /* Clase específica para la imagen de previsualización */
  width: 100%; /* Ocupa el ancho del contenedor (350px) */
  height: 280px; /* Alto deseado */
  object-fit: cover; /* Cubre el espacio sin deformar */
  border-radius: var(--bRadiusS); /* Bordes redondeados */
  background-color: var(--cBlackV1); /* Fondo mientras carga */
}

.imagePagination {
  display: flex;
  align-items: center;
  justify-content: center; /* O según necesites alinear */
  gap: var(--spM); /* Espacio entre botones y el texto "1 / X" */
}

/* Estilo para los BOTONES de paginación */
.imagePagination button {
  background: transparent; /* <-- ESENCIAL: Botón sin fondo */
  border: 0.5px solid var(--cWhite); /* Sin borde */
  color: var(--cWhite); /* Color base para el icono (currentColor) */
  padding: 9px; /* Sin padding interno */
  margin: 0; /* Sin margen extra */
  cursor: pointer;

  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%; /* Mantiene el área de click circular */
}

/* Estilo para botones deshabilitados */
.imagePagination button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Estilo base y tamaño para el SVG DENTRO del botón */

/* ESTILO ESPECÍFICO para el CÍRCULO DENTRO de estos iconos */
/* Contenedor Info */
.areaInfo {
  flex-grow: 1; /* Ocupa el espacio restante */
  display: flex;
  flex-direction: column;
  gap: var(--spM); /* Espacio entre bloques de info */
}

.areaHeader {
  display: flex;
  align-items: center;
  gap: var(--spS);
  flex-wrap: wrap; /* Para que el badge baje si no cabe */
}

.areaTitle {
  /* Título del Área (Piscina Exclusiva) */
  font-size: var(--sL); /* 16px */
  font-weight: var(--bMedium); /* 500 */
  color: var(--cWhite);
  margin: 0; /* Resetear margen */
}

.statusBadge {
  font-size: var(--sS); /* 12px */
  padding: var(--spXs) var(--spS); /* 4px 8px */
  border-radius: var(--bRadiusS); /* 8px */
  font-weight: var(--bRegular);
}

.statusDisponible {
  background-color: var(--cSuccess); /* Verde éxito */
  color: var(--cWhite);
  /* O usar los colores de Figma si son diferentes:
  background-color: #00af90;
  color: #00e38c;
  */
}

.statusNoDisponible {
  background-color: var(--cError); /* Rojo error */
  color: var(--cWhite);
}

.areaDescription {
  /* Descripción del área */
  font-size: var(--sM); /* 14px */
  color: var(--cWhiteV1); /* #a7a7a7 */
  line-height: 1.4;

  /* --- Añade estas 4 líneas para truncar --- */
  display: -webkit-box; /* Necesario para line-clamp */
  -webkit-line-clamp: 4; /* Número máximo de líneas */
  -webkit-box-orient: vertical; /* Orientación vertical */
  overflow: hidden; /* Oculta el texto que se desborda */
  /* text-overflow: ellipsis; */ /* Opcional, usualmente implícito con line-clamp */
}

.areaSeparator {
  /* Línea separadora */
  border: none;
  border-top: 0.5px solid var(--cWhiteV1); /* Línea sutil */
  margin: 0; /* Resetear margen */
}

.detailBlock {
  /* Contenedor para Capacidad, Disponibilidad, Reglas */
  display: flex;
  justify-content: space-between;
  padding: 16px 0px;
}

.detailLabel {
  /* "Cantidad máxima...", "Disponibilidad", "Reglas..." */
  font-size: var(--sL); /* 16px */
  font-weight: var(--bMedium); /* 500 */
  color: var(--cWhite);
}

.detailValue {
  /* "16", "Días: ...", "Máximo 2 horas..." */
  font-size: var(--sM); /* 14px */
  color: var(--cWhiteV1); /* #a7a7a7 */
}

/* En CreateReserva.module.css */

.rulesButton {
  /* Quita o comenta estilos específicos de texto si los tenías */
  /* text-decoration: underline; */ /* <-- Quitar si existe */
  /* text-align: left; */ /* Quitar o ajustar */

  /* Añade/Ajusta estilos para botón de icono */
  background: none; /* Sin fondo */
  border: none; /* Sin borde */
  padding: 3px; /* Espacio pequeño alrededor del icono (ajusta si quieres) */
  margin: 0; /* Resetea margen si es necesario */
  margin-top: var(--spXs); /* Mantiene el margen superior que tenías */
  cursor: pointer;
  color: var(--cWhite); /* Color del icono (heredado por currentColor) */
  width: auto; /* O un tamaño fijo si prefieres: ej 24px */
  height: auto; /* O un tamaño fijo si prefieres: ej 24px */
  display: inline-flex; /* Para alinear bien el SVG */
  align-items: right;
  justify-content: right;
  border-radius: 4px; /* Opcional: esquinas redondeadas para el área del botón */
  vertical-align: middle; /* Ayuda a alinear con el texto del label */
}

.rulesButton:hover {
  color: var(--accentv1); /* Color al pasar el mouse */
  background-color: rgba(
    var(--accentRGB),
    0.15
  ); /* Opcional: fondo sutil al pasar el mouse */
}

/* Control específico del tamaño del SVG dentro de ESTE botón */
.rulesButton svg {
  width: 16px; /* Tamaño deseado del icono */
  height: 16px; /* Tamaño deseado del icono */
  display: block; /* Evita espacio extra */
}
.sectionTitle {
  /* Estilo para "Datos generales", "Datos de la reserva" */
  font-size: var(--sL); /* 16px */
  font-weight: var(--bMedium); /* 500 */
  color: var(--cWhite);
  margin-bottom: var(--spXs); /* Pequeño espacio antes del campo */
}
/* Quitar margen superior/inferior extra de los h2 si se usa sectionTitle */
.step1Content h2 {
  margin: 0; /* Resetear márgenes si usamos sectionTitle */
  font-size: inherit; /* Heredar tamaño de sectionTitle si se reemplaza */
  font-weight: inherit;
}

.sectionLabel {
  /* Label "Selecciona la fecha", "Selecciona la hora", "Cantidad de personas" */
  font-size: var(--sL); /* 16px */
  font-weight: var(--bMedium); /* 500 */
  color: var(--cWhite); /* Asegura color blanco */
  margin-bottom: var(--spXs); /* 0.25rem -> 4px */
}

.sectionSubtitle {
  font-size: var(--sM); /* 14px */
  color: var(--cWhiteV1); /* #a7a7a7 */
  margin-bottom: var(--spM); /* 0.75rem -> 12px */
}

.errorText {
  color: var(--cError); /* #e46055 o similar */
  font-size: var(--sS); /* 12px */
  margin-top: calc(
    -1 * var(--spM)
  ); /* Ajusta para acercar al campo (-0.75rem) */
  padding-left: var(--spS); /* Añade padding si viene de un Select/Input */
}

/* Sección Fecha */
.dateSection {
  display: flex;
  flex-direction: column;
}

/* Sección Duración */
.durationSection {
  display: flex;
  flex-direction: column;
}
.timeSelection {
  /* Contenedor si necesitas agrupar los selects */
}
.timeFields {
  display: flex;
  gap: var(--spL);
}
.halfWidth {
  flex: 1;
}

/* Sección Personas */
.peopleSection {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: var(--spXl); /* 2rem -> 32px */
}
.peopleLabelContainer {
  display: flex;
  flex-direction: column;
  gap: var(--spXs); /* 0.25rem -> 4px */
  flex-grow: 1;
}
.peopleInputContainer {
  display: flex;
  align-items: center;
  gap: var(--spL); /* 1rem -> 16px */
}
.peopleInput input {
  /* Estilo específico para el input de número */
  max-width: 100px;
  text-align: center;
}

/* --- Estilos Paso 3 --- */
.step3Content {
  gap: var(--spXl); /* 1.5rem -> 24px */
}
.summaryContainer {
  background-color: var(--cBlackV2);
  border-radius: var(--bRadius); /* 0.75rem -> 12px */
}

.summaryContent {
  display: flex;
  gap: var(--spL); /* 1rem -> 16px */
  /* padding: var(--spL); <-- Quita el padding de aquí si lo pusiste en summaryContainer */
  width: 100%; /* Asegura que ocupe el ancho */
  flex-direction: row; /* Asegura la dirección horizontal (aunque es default) */
  /* Alinea los items al inicio si tienen alturas diferentes */
}

.summaryImageContainer {
  /* flex: 1; */
  width: 350px; /* <-- AÑADE/ASEGURA este ancho */
}
.summaryImage {
  /* (Sin cambios, ya estaba bien) */
  width: 100%; /* Ocupa el 100% del contenedor (218px) */
  height: 100%;
  object-fit: cover;
  border-radius: var(--bRadiusS);
}
.summaryDetailsContainer {
  /* (Sin cambios, ya estaba bien) */
  display: flex;
  flex-direction: column;
  gap: var(--spL);
  flex-grow: 1; /* Ocupa el espacio restante */
}
.summaryAreaInfo {
  display: flex;
  flex-direction: column;
  gap: var(--spS); /* 0.5rem -> 8px */
}
.summaryAreaName {
  /* Nombre del área en el resumen */
  font-size: var(--sL); /* 16px */
  font-weight: var(--bMedium); /* 500 */
  color: var(--cWhite); /* #f0f0f0 */
}
.summaryAreaDescription {
  font-size: var(--sM); /* 14px */
  color: var(--cWhiteV1); /* #a7a7a7 */
}
.summaryBookingDetails {
  display: flex;
  flex-direction: column;
  gap: var(--spS); /* 0.5rem -> 8px */
}
.summaryDetailsTitle {
  /* Título "Detalles" en resumen */
  font-size: var(--sL); /* 16px */
  font-weight: var(--bMedium); /* 500 */
  color: var(--cWhite); /* #f0f0f0 */
}
.summaryDetailItem {
  display: flex; /* <-- AÑADE: Para posicionar elementos internos */
  align-items: center;
  gap: var(--spS); /* Reduce el gap si es necesario para que quepa todo */
  font-size: var(--sM);
  color: var(--cWhiteV1);
}
.summaryDetailItem .detailIcon {
  /* Selector más específico */
  width: 20px;
  height: 20px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0; /* Evita que el icono se encoja */
  /* margin-right: var(--spXs);  <-- Puedes usar gap en el contenedor padre en su lugar */
  color: var(--cWhiteV1);
}
.summaryDetailItem span:first-child {
  /* Placeholder para icono */
  width: 20px;
  height: 20px;
  display: inline-flex; /* Usa flex para centrar futuro icono */
  align-items: center;
  justify-content: center;
  /* background-color: var(--terciary); Color placeholder icono */
  margin-right: var(--spXs); /* 4px */
  color: var(--cWhiteV1); /* Color del icono mismo */
}
.summaryCostPerHour {
  /* Estilo específico si es necesario */
}
/* NUEVO: Estilo para el precio por unidad (Bs 50/h) */
.summaryPricePerUnit {
  color: var(--cWhiteV1); /* Mismo color que otros detalles */
  white-space: nowrap; /* Evita que se parta */
}

/* Total Cost (Asegura que se vaya a la derecha) */
.summaryTotalCost {
  margin-left: auto; /* <-- ESENCIAL: Empuja esto a la derecha */
  font-weight: var(--bMedium);
  color: var(--cWhite);
  white-space: nowrap; /* Evita que se parta */
  text-align: right; /* Alinea el texto a la derecha dentro de su span */
}

/* --- Estilos Acciones/Botones --- */
.formActions {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--spL); /* 1rem */
}
.priceInfoBottom {
  gap: var(--spXs);
  font-size: 20px;
  font-weight: 600;
  color: var(--cWhite);
}

.button {
  padding: var(--spM) var(--spXl); /* 0.75rem 1.5rem -> 12px 24px */
  border-radius: var(--bRadiusS); /* 0.5rem -> 8px */
  font-weight: var(--bSemibold); /* 600 */
  font-size: var(--sL); /* 16px */
  cursor: pointer;
  border: none;
  min-width: 120px;
  text-align: center;
  transition: background-color 0.2s ease, color 0.2s ease,
    border-color 0.2s ease;
}

.backBtn {
  background-color: transparent;
  border: var(--bWidth) solid var(--cWhiteV1); /* #a7a7a7 */
  color: var(--cWhiteV1); /* #a7a7a7 */
  margin-right: 10px;
}
.backBtn:hover {
  background-color: var(--cBlackV3); /* #414141 */
  color: var(--cWhite); /* #f0f0f0 */
  border-color: var(--cBlackV3);
}

.nextBtn,
.submitBtn {
  background-color: var(--cAccent); /* #00e38c */
  color: var(--cBlack); /* #212121 */
}
.nextBtn:hover,
.submitBtn:hover {
  background-color: var(
    --accentv1
  ); /* #4ee7ac (Versión más clara del accent) */
  /* O mantener el mismo color: background-color: var(--cAccent); */
}

/* --- Estilos Formularios (Input/Select/TextArea) --- */
.formField {
  position: relative; /* <-- AÑADIR: Contexto para el error absoluto */
  display: flex;
  flex-direction: column;
}

/* --- Estilos para CalendarPicker (usando variables de tema) --- */
.calendarContainer {
  display: flex;
  flex-direction: column;
  gap: var(--spL); /* 1rem */
  align-self: center;
  width: 100%; /* Ocupa el ancho disponible */
  max-width: 707px; /* Ancho máximo si es necesario */
}

.calendarViewControls {
  display: flex;
  gap: var(--spS); /* 0.5rem */
  align-self: flex-start;
}

/* Hereda de .button base */
.controlButton {
  padding: var(--spS) var(--spL); /* 0.5rem 1rem -> 8px 16px */
  border-radius: var(--bRadiusS); /* 0.5rem -> 8px */
  border: var(--bWidth) solid var(--cWhiteV1); /* #a7a7a7 */
  background-color: transparent;
  color: var(--cWhiteV1); /* #a7a7a7 */
  cursor: pointer;
  font-size: var(--sM); /* 14px */
  font-weight: var(--bRegular); /* 400 */
}
.controlButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.controlButton.active {
  background-color: var(--cWhite); /* #f0f0f0 */
  color: var(--cBlackV2); /* #333536 */
  border-color: var(--cWhite);
  font-weight: var(--bMedium); /* 500 */
}

/* --- Estilos para calendario manual (sin react-day-picker) --- */
/* Contenedor principal del calendario generado manualmente */
.calendarGridContainer {
  padding: var(--spL);
  background-color: var(--cBlackV2);
  border-radius: var(--bRadiusS);
  width: 100%;
  color: var(--cWhite);
}

/* Equivalente a rdpCaption */
.calendarNavigation {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 var(--spS);
  margin-bottom: var(--spL);
}

/* Equivalente a rdpCaptionLabel */
.calendarMonthYear {
  font-size: var(--sXl); /* 20px */
  font-weight: var(--bSemibold); /* 600 */
  color: var(--cWhite);
  text-transform: capitalize;
}

/* Equivalente a rdpNavButton */
.calendarNavButton {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: 28px; /* Ajusta tamaño */
  height: 28px; /* Ajusta tamaño */
  background-color: transparent;
  border: var(--bWidth) solid var(--terciary); /* #595959 */
  border-radius: 50%;
  color: var(--cWhite);
  cursor: pointer;
  font-size: var(--sL); /* Tamaño flecha */
}
.calendarNavButton:hover {
  background-color: var(--cBlackV3); /* #393c3f */
  border-color: var(--cWhiteV1);
}

/* Equivalente a rdpHeadRow */
.calendarWeekdays {
  display: flex;
  justify-content: space-around;
  margin-bottom: var(--spS);
  padding-bottom: var(--spS);
  border-bottom: var(--bWidth) solid var(--cBlackV3); /* #393c3f */
}

/* Equivalente a rdpHeadCell */
.calendarWeekday {
  flex: 1;
  text-align: center;
  font-size: var(--sL); /* 16px */
  font-weight: var(--bMedium); /* 500 */
  color: var(--cWhiteV1); /* #a7a7a7 */
  height: 26px;
  box-sizing: border-box;
}

/* Equivalente a rdpTbody */
.calendarDaysGrid {
  display: flex;
  flex-wrap: wrap;
}

/* Equivalente a rdpCell */
.calendarDayCell {
  flex-basis: calc(100% / 7);
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 1px 0;
  height: 40px;
  position: relative;
}

/* Equivalente a rdpDay (el botón) */
.calendarDayButton {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 36px;
  height: 36px;
  border-radius: 50%; /* Circular */
  border: var(--bWidth) solid transparent;
  background-color: transparent;
  cursor: pointer;
  font-size: var(--sL); /* 16px */
  font-weight: var(--bMedium); /* 500 */
  color: var(--cWhiteV1); /* #a7a7a7 (Color por defecto días mes actual) */
  transition: background-color 0.2s, color 0.2s, border-color 0.2s,
    box-shadow 0.2s;
  position: relative;
  z-index: 1;
}
.calendarDayButton:hover:not(:disabled) {
  background-color: var(--cBlackV3); /* #393c3f (Hover sutil) */
}

/* Día seleccionado */
.calendarDayButton.selectedDay {
  background-color: transparent !important;
  color: var(--cAccent) !important; /* #00e38c */
  font-weight: var(--bBold); /* 700 */
  border: var(--bWidth) solid var(--cAccent); /* Borde verde */
  /* box-shadow: 0 0 8px var(--cAccent); Efecto neón opcional */
}
.calendarDayButton.selectedDay:hover:not(:disabled) {
  background-color: transparent !important;
}

/* Día ocupado (con punto rojo) */
.calendarDayButton.busyDay::after {
  content: "";
  position: absolute;
  bottom: 4px;
  left: 50%;
  transform: translateX(-50%);
  width: 5px;
  height: 5px;
  border-radius: 50%;
  background-color: var(--cError); /* #e46055 */
  z-index: 2;
}
/* Ajusta color del texto si el día ocupado también está seleccionado */
.calendarDayButton.selectedDay.busyDay {
  color: var(--cAccent) !important; /* Mantiene el color neón */
}

/* Día de hoy */
.calendarDayButton.today {
  font-weight: var(--bBold); /* 700 */
  color: var(--cWhite); /* #f0f0f0 */
  /* border: 1px dashed var(--cWhite); Borde opcional */
}
.calendarDayButton.selectedDay.today {
  /* Mantiene estilos de .selectedDay */
}

/* Días fuera del mes */
.calendarDayButton.outsideDay {
  color: var(--cBlackV3) !important; /* #393c3f (Color muy apagado) */
  cursor: default;
  pointer-events: none; /* No interactivo */
}
.calendarDayButton.outsideDay:hover {
  background-color: transparent;
}

/* Días deshabilitados (pasados o no del mes) */
.calendarDayButton:disabled,
.calendarDayButton.disabledDay /* Clase explícita si la añades */ {
  color: var(--terciary) !important; /* #595959 (Color deshabilitado) */
  cursor: not-allowed;
  pointer-events: none; /* Asegura no interactividad */
  /* text-decoration: line-through; Opcional */
  background-color: transparent !important; /* Sin fondo */
  border-color: transparent !important; /* Sin borde */
}
.calendarDayButton:disabled:hover {
  background-color: transparent; /* Sin hover */
}

.errorText {
  position: absolute; /* <-- Posicionamiento absoluto */
  top: 100%; /* <-- Posiciona el borde superior del error justo debajo del contenedor relativo */
  left: 0; /* <-- Alinea a la izquierda del contenedor */
  width: 100%; /* <-- Ocupa el ancho del contenedor */
  margin-top: 2px; /* <-- Pequeño espacio entre el input y el texto del error */
  padding-left: 5px; /* <-- Opcional: pequeña indentación */

  color: var(--cError); /* Color de error */
  font-size: var(--sS); /* Tamaño pequeño */
  line-height: 1.2; /* Interlineado ajustado */

  /* Importante para evitar problemas de click */
  pointer-events: none; /* Permite hacer click 'a través' del mensaje de error si solapa algo */

  /* Resetea otros márgenes por si acaso */
  margin-bottom: 0;
  margin-left: 0;
  margin-right: 0;
}

.periodSelectionContainer {
  display: flex;
  flex-wrap: wrap; /* Permite que los botones pasen a la siguiente línea */
  gap: var(--spS); /* Espacio entre botones */
  margin-top: var(--spS);
}

.periodButton {
  padding: 8px;
  border: 0.5px solid var(--cWhiteV1); /* Borde por defecto */
  background-color: transparent; /* Fondo transparente */
  border-radius: var(--bRadiusS);
  cursor: pointer;
  transition: background-color 0.2s ease, border-color 0.2s ease;
  font-size: var(--sS); /* Ajusta tamaño de fuente */
  color: var(--cWhiteV1);
}

.periodButton.selectedPeriod {
  background-color: var(--cFillSidebar); /* Fondo del botón seleccionado */
  color: var(--cWhite); /* Color de texto del botón seleccionado */
  border-color: var(--cSidebar); /* Borde del botón seleccionado */
  font-weight: var(--bMedium);
}

/* Clases de Texto Auxiliares (si no las tienes ya) */
.loadingText {
  display: block;
  margin-top: var(--spS);
  color: var(--cWhiteV1);
  font-style: italic;
}

.warningText {
  display: block;
  margin-top: var(--spS);
  color: var(--cWarning); /* Asegúrate de tener esta variable */
}

/* Ajustes al contenedor de la sección de duración si es necesario */

/* EN CreateReserva.module.css */

/* Contenedor principal del selector de cantidad */
.quantitySelector {
  display: flex;
  align-items: center;
  gap: var(--spL); /* Espacio entre botones y número (ajusta 1rem) */
  /* Puedes añadir otros estilos como background, border-radius si quieres un fondo */
}

/* Estilo para los botones +/- */
.quantityButton {
  background-color: transparent; /* Sin fondo */
  border: 1px solid var(--cWhiteV1); /* Borde circular */
  color: var(--cWhite); /* Color del símbolo +/- */
  width: 32px; /* Ancho del botón (ajusta) */
  height: 32px; /* Alto del botón (ajusta) */
  border-radius: 50%; /* Hace el botón circular */
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: var(--sXl); /* Tamaño del símbolo +/- (ajusta 20px) */
  line-height: 1; /* Ajusta línea para centrar verticalmente */
  cursor: pointer;
  transition: all 0.2s ease;
  padding: 0; /* Quitar padding extra */
  min-width: 32px; /* Asegura ancho mínimo */
  min-height: 32px; /* Asegura alto mínimo */
  box-sizing: border-box; /* Incluye padding y border en el tamaño total */
}

.quantityButton:hover:not(:disabled) {
  border-color: var(--cAccent); /* Cambia color borde al pasar el mouse */
  background-color: var(--cBlackV3); /* Fondo sutil al pasar el mouse */
}

.quantityButton:disabled {
  opacity: 0.5; /* Botón semi-transparente si está deshabilitado */
  cursor: not-allowed; /* Cursor no permitido */
  border-color: var(--terciary); /* Borde más oscuro */
  color: var(--terciary);
}

/* Estilo para el input numérico */
.quantityInput {
  width: 60px;
  text-align: center;

  background-color: transparent;
  color: var(--cWhite);
  padding: var(--spS);
  border-radius: var(--bRadiusS);
  font-size: var(--sM);
  margin: 0 var(--spS);
}

/* Contenedor del selector de cantidad */
.quantitySelector {
  display: flex;
  align-items: center;
  gap: var(--spS);
  background-color: var(--cBlackV2);
  padding: var(--spS);
  border-radius: var(--bRadiusS);
}

/* En CreateReserva.module.css */

.disabledPeriod {
  opacity: 0.5; /* Reduce opacidad */
  cursor: not-allowed; /* Cambia cursor */
  /* Opcional: Cambia colores si quieres más feedback */
  /* background-color: var(--cBgDisabled); */
  /* border-color: var(--cBorderDisabled); */
  /* color: var(--cTextDisabled); */
}

/* Opcional: Evita que el estilo hover afecte a botones deshabilitados */

/* Asegúrate que el hover del seleccionado no se aplique si está deshabilitado */

.warningText {
  /* Estilo para "No hay periodos..." o mensajes de bloqueo */
  color: var(--cWarning);
  font-size: var(--fsSmall);
  margin-top: var(--spMedium);
  display: block; /* O inline-block si prefieres */
  text-align: center; /* Opcional */
}
.unavailablePeriod {
  background-color: var(--cWhiteV2); /* Un fondo gris claro */
  color: var(--cWhiteV1); /* Un texto más tenue */
  border-color: var(--cWhiteV2); /* Borde del mismo color */
  text-decoration: line-through; /* Tachar el texto */
  cursor: not-allowed !important; /* Forzar el cursor de 'no permitido' */
}

/* Opcional: Para que al hacer hover no cambie de color */
.unavailablePeriod:hover {
  background-color: var(--cWhiteV3);
  border-color: var(--cWhiteV3);
}
.rulesModalContent {
  .title {
    color: var(--cWhite);
    font-size: 16px;
    font-weight: 500;
  }
  .subtitle {
    color: var(--cWhiteV1);
    font-size: 14px;
    font-weight: 400;
  }
}
