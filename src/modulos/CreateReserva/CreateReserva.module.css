/* CreateReserva.module.css */

.createReservaContainer {
  display: flex;
  flex-direction: column;
  gap: var(--spL); /* 1rem -> 16px */
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  padding: var(--spL);
  color: var(--cWhite); /* Color de texto base */
  font-family: var(--fPrimary);
}

.header {
  display: flex;
  flex-direction: column;
  gap: var(--spM); /* 0.75rem -> 12px */
}

.backButton {
  display: flex;
  align-items: center;
  gap: var(--spS); /* 0.5rem -> 8px */
  cursor: pointer;
  color: var(--cWhiteV1); /* #a7a7a7 */
  font-size: var(--sM); /* 14px */
}
.backButton:hover {
  color: var(--cWhite); /* #f0f0f0 */
}

.header h1 {
  font-size: var(--sXxl); /* 24px */
  font-weight: var(--bSemibold); /* 600 */
  color: var(--cWhite); /* Asegura color blanco */
}

.progressContainer {
  display: flex;
  flex-direction: column;
  gap: var(--spS); /* 0.5rem -> 8px */
  margin-top: var(--spS); /* Añade espacio si es necesario */
}

.progressBar {
  height: 7px;
  background-color: var(--cBlackV1); /* #292929 */
  border-radius: var(--bRadiusM); /* 1rem -> 16px */
  overflow: hidden;
}

.progressFill {
  height: 100%;
  /* Color inicial verde oscuro, podría cambiar con JS/clases */
  background-color: var(--cBigSidebar); /* #246950 */
  transition: width 0.3s ease-in-out;
}
/* Podrías tener una clase adicional para el color verde claro */
/* .progressFillActive { background-color: var(--cAccent); } */


.formContainer {
  /* Contenedor si necesitas separar el header de la tarjeta */
}

.formCard {
  display: flex;
  flex-direction: column;
  gap: var(--spXl); /* 1.5rem -> 24px */
  background-color: var(--cBlackV2); /* #333536 */
  padding: var(--spL); /* 1rem -> 16px */
  border-radius: var(--bRadiusM); /* 1rem -> 16px */
  border: var(--bWidth) solid var(--cWhiteV1); /* 0.5px solid #a7a7a7 -> usamos 1px y variable */
}

.stepIndicator {
    font-size: var(--sM); /* 14px */
    color: var(--cWhite); /* #f0f0f0 */
    align-self: flex-start;
    margin-bottom: calc(-1 * var(--spL)); /* -1rem (ajusta según diseño exacto) */
    padding-left: var(--spS); /* Añade un poco de padding para que no pegue al borde */
}
.stepIndicatorText { /* Estilo para el texto del paso */
  font-size: var(--sM); /* 14px */
  color: var(--cWhite); /* #f0f0f0 */
  margin-bottom: var(--spXs); /* Espacio antes de la barra */
  /* align-self: flex-start; Opcional */
}

.stepContent {
  display: flex;
  flex-direction: column;
  gap: var(--spXl); /* Ajusta según el contenido de cada paso (1.5rem -> 24px) */
}

/* --- Estilos Títulos dentro de Pasos --- */
.stepTitle, /* Título del paso */
.step1Content h2,
.step3Content h2, /* Título "Datos del responsable" */
.summaryTitle { /* Título "Resumen de la reserva" */
    font-size: var(--sXl); /* 20px (o var(--sL) si prefieres 16px) */
    font-weight: var(--bSemibold); /* 600 */
    color: var(--cWhite); /* Asegura color blanco */
    margin-top: var(--spS); /* 0.5rem */
    margin-bottom: calc(-1 * var(--spM)); /* -0.75rem (reduce espacio antes del campo/contenido) */
}
/* Ajuste específico para el primer h2 de paso 1 si es necesario */
.step1Content h2:first-of-type {
     margin-top: 0;
}
/* Ajuste específico para el título del resumen */
.summaryTitle {
    margin-top: var(--spL); /* 1rem */
    margin-bottom: calc(-1 * var(--spS)); /* -0.5rem */
}


.formSection {
  display: flex;
  flex-direction: column;
  gap: var(--spS); /* Espacio entre título y campo */
}
/* --- Estilos Previsualización Área (Paso 1) --- */
.areaPreview {
  display: flex;
  flex-direction: row; /* Lado a lado */
  gap: var(--spL); /* 1rem */
  margin-top: var(--spL);
 
  padding: var(--spL);
  border-radius: var(--bRadiusS);
  background-color: var(--cBlackV2); /* Fondo ligeramente diferente opcional */
}

/* Contenedor Imagen */
.imageContainer {
  width: 350px; /* Ancho deseado */
  flex-shrink: 0; /* Evita que se encoja */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spS);
}

.previewImage { /* Clase específica para la imagen de previsualización */
  width: 100%; /* Ocupa el ancho del contenedor (350px) */
  height: 280px; /* Alto deseado */
  object-fit: cover; /* Cubre el espacio sin deformar */
  border-radius: var(--bRadiusS); /* Bordes redondeados */
  background-color: var(--cBlackV1); /* Fondo mientras carga */
}

/* Paginación (Placeholder) */
.imagePagination {
  display: flex;
  align-items: center;
  gap: var(--spM);
  font-size: var(--sS);
  color: var(--cWhite);
}
.imagePagination button {
  background: var(--cBlackV1);
  border: none;
  color: var(--cWhite);
  width: 24px;
  height: 24px;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Contenedor Info */
.areaInfo {
  flex-grow: 1; /* Ocupa el espacio restante */
  display: flex;
  flex-direction: column;
  gap: var(--spM); /* Espacio entre bloques de info */
}

.areaHeader {
  display: flex;
  align-items: center;
  gap: var(--spS);
  flex-wrap: wrap; /* Para que el badge baje si no cabe */
}

.areaTitle { /* Título del Área (Piscina Exclusiva) */
  font-size: var(--sL); /* 16px */
  font-weight: var(--bMedium); /* 500 */
  color: var(--cWhite);
  margin: 0; /* Resetear margen */
}

.statusBadge {
  font-size: var(--sS); /* 12px */
  padding: var(--spXs) var(--spS); /* 4px 8px */
  border-radius: var(--bRadiusS); /* 8px */
  font-weight: var(--bRegular);
}

.statusDisponible {
  background-color: var(--cSuccess); /* Verde éxito */
  color: var(--cWhite);
  /* O usar los colores de Figma si son diferentes:
  background-color: #00af90;
  color: #00e38c;
  */
}

.statusNoDisponible {
  background-color: var(--cError); /* Rojo error */
  color: var(--cWhite);
}

.areaDescription { /* Descripción del área */
  font-size: var(--sM); /* 14px */
  color: var(--cWhiteV1); /* #a7a7a7 */
  line-height: 1.4;
}

.areaSeparator { /* Línea separadora */
  border: none;
  border-top: 1px solid var(--cBlackV1); /* Línea sutil */
  margin: 0; /* Resetear margen */
}

.detailBlock { /* Contenedor para Capacidad, Disponibilidad, Reglas */
  display: flex;
  flex-direction: column;
  gap: var(--spXs); /* Espacio entre label y value */
}

.detailLabel { /* "Cantidad máxima...", "Disponibilidad", "Reglas..." */
  font-size: var(--sL); /* 16px */
  font-weight: var(--bMedium); /* 500 */
  color: var(--cWhite);
}

.detailValue { /* "16", "Días: ...", "Máximo 2 horas..." */
  font-size: var(--sM); /* 14px */
  color: var(--cWhiteV1); /* #a7a7a7 */
}

.rulesButton { /* Botón/Enlace para ver reglas */
  background: none;
  border: none;
  color: var(--cAccent); /* Color acento */
  text-align: left;
  padding: 0;
  cursor: pointer;
  font-size: var(--sM);
  text-decoration: underline;
  margin-top: var(--spXs);
}
.rulesButton:hover {
  color: var(--accentv1);
}
.sectionTitle { /* Estilo para "Datos generales", "Datos de la reserva" */
  font-size: var(--sL); /* 16px */
  font-weight: var(--bMedium); /* 500 */
  color: var(--cWhite);
  margin-bottom: var(--spXs); /* Pequeño espacio antes del campo */
}
/* Quitar margen superior/inferior extra de los h2 si se usa sectionTitle */
.step1Content h2 {
  margin: 0; /* Resetear márgenes si usamos sectionTitle */
  font-size: inherit; /* Heredar tamaño de sectionTitle si se reemplaza */
  font-weight: inherit;
}


/* --- Estilos Paso 2 --- */
.step2Content {
    gap: var(--spXxl); /* 2rem -> 32px */
}

.sectionLabel { /* Label "Selecciona la fecha", "Selecciona la hora", "Cantidad de personas" */
    font-size: var(--sL); /* 16px */
    font-weight: var(--bMedium); /* 500 */
    color: var(--cWhite); /* Asegura color blanco */
    margin-bottom: var(--spXs); /* 0.25rem -> 4px */
}

.sectionSubtitle {
    font-size: var(--sM); /* 14px */
    color: var(--cWhiteV1); /* #a7a7a7 */
    margin-bottom: var(--spM); /* 0.75rem -> 12px */
}

.errorText {
    color: var(--cError); /* #e46055 o similar */
    font-size: var(--sS); /* 12px */
    margin-top: calc(-1 * var(--spM)); /* Ajusta para acercar al campo (-0.75rem) */
    padding-left: var(--spS); /* Añade padding si viene de un Select/Input */
}

/* Sección Fecha */
.dateSection {
    display: flex;
    flex-direction: column;
}

/* Sección Duración */
.durationSection {
    display: flex;
    flex-direction: column;
}
.timeSelection {
   /* Contenedor si necesitas agrupar los selects */
}
.timeFields {
    display: flex;
    gap: var(--spL);
}
.halfWidth {
    flex: 1;
}

/* Sección Personas */
.peopleSection {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--spXl); /* 2rem -> 32px */
}
.peopleLabelContainer {
    display: flex;
    flex-direction: column;
    gap: var(--spXs); /* 0.25rem -> 4px */
    flex-grow: 1;
}
.peopleInputContainer {
    display: flex;
    align-items: center;
    gap: var(--spL); /* 1rem -> 16px */
}
.peopleInput input { /* Estilo específico para el input de número */
    max-width: 80px;
    text-align: center;
}


/* --- Estilos Paso 3 --- */
.step3Content {
    gap: var(--spXl); /* 1.5rem -> 24px */
}

.summaryContainer {
    background-color: var(--cBlackV2); /* Mismo fondo que la tarjeta */
    border-radius: var(--bRadius); /* 0.75rem -> 12px */
}
.summaryContent {
    display: flex;
    gap: var(--spL); /* 1rem -> 16px */
    padding: var(--spL);
}
.summaryImageContainer {
   flex-shrink: 0;
}
.summaryImage {
    width: 218px;
    height: 218px;
    object-fit: cover;
    border-radius: var(--bRadiusS); /* 0.5rem -> 8px */
}
.summaryDetailsContainer {
    display: flex;
    flex-direction: column;
    gap: var(--spL); /* 1rem -> 16px */
    flex-grow: 1;
}
.summaryAreaInfo {
    display: flex;
    flex-direction: column;
    gap: var(--spS); /* 0.5rem -> 8px */
}
.summaryAreaName { /* Nombre del área en el resumen */
    font-size: var(--sL); /* 16px */
    font-weight: var(--bMedium); /* 500 */
    color: var(--cWhite); /* #f0f0f0 */
}
.summaryAreaDescription {
    font-size: var(--sM); /* 14px */
    color: var(--cWhiteV1); /* #a7a7a7 */
}
.summaryBookingDetails {
    display: flex;
    flex-direction: column;
    gap: var(--spS); /* 0.5rem -> 8px */
}
.summaryDetailsTitle { /* Título "Detalles" en resumen */
    font-size: var(--sL); /* 16px */
    font-weight: var(--bMedium); /* 500 */
    color: var(--cWhite); /* #f0f0f0 */
}
.summaryDetailItem {
    display: flex;
    align-items: center;
    gap: var(--spXs); /* 0.25rem -> 4px */
    font-size: var(--sM); /* 14px */
    color: var(--cWhiteV1); /* #a7a7a7 */
}
.summaryDetailItem span:first-child { /* Placeholder para icono */
    width: 20px;
    height: 20px;
    display: inline-flex; /* Usa flex para centrar futuro icono */
    align-items: center;
    justify-content: center;
    /* background-color: var(--terciary); Color placeholder icono */
    margin-right: var(--spXs); /* 4px */
    color: var(--cWhiteV1); /* Color del icono mismo */
}
.summaryCostPerHour {
    /* Estilo específico si es necesario */
}
.summaryTotalCost {
    margin-left: auto;
    font-weight: var(--bMedium); /* 500 */
    color: var(--cWhite); /* #f0f0f0 */
}


/* --- Estilos Acciones/Botones --- */
.formActions {
  display: flex;
  justify-content: flex-end;
  gap: var(--spL); /* 1rem */
  margin-top: var(--spL);
  padding-top: var(--spL);
  border-top: var(--bWidth) solid var(--cBlackV3); /* #414141 */
}

.button {
  padding: var(--spM) var(--spXl); /* 0.75rem 1.5rem -> 12px 24px */
  border-radius: var(--bRadiusS); /* 0.5rem -> 8px */
  font-weight: var(--bSemibold); /* 600 */
  font-size: var(--sL); /* 16px */
  cursor: pointer;
  border: none;
  min-width: 120px;
  text-align: center;
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
}

.backBtn {
  background-color: transparent;
  border: var(--bWidth) solid var(--cWhiteV1); /* #a7a7a7 */
  color: var(--cWhiteV1); /* #a7a7a7 */
}
.backBtn:hover {
  background-color: var(--cBlackV3); /* #414141 */
  color: var(--cWhite); /* #f0f0f0 */
  border-color: var(--cBlackV3);
}

.nextBtn, .submitBtn {
  background-color: var(--cAccent); /* #00e38c */
  color: var(--cBlack); /* #212121 */
}
.nextBtn:hover, .submitBtn:hover {
  background-color: var(--accentv1); /* #4ee7ac (Versión más clara del accent) */
  /* O mantener el mismo color: background-color: var(--cAccent); */
}

/* --- Estilos Formularios (Input/Select/TextArea) --- */
.formField {
    display: flex;
    flex-direction: column;
    gap: var(--spXs); /* 4px */
}
/* Asegúrate que los estilos *internos* de tus componentes Input, Select, TextArea usen variables de tema */


/* --- Estilos para CalendarPicker (usando variables de tema) --- */
.calendarContainer {
  display: flex;
  flex-direction: column;
  gap: var(--spL); /* 1rem */
  align-self: center;
  width: 100%; /* Ocupa el ancho disponible */
  max-width: 707px; /* Ancho máximo si es necesario */
}

.calendarViewControls {
  display: flex;
  gap: var(--spS); /* 0.5rem */
  align-self: flex-start;
}

/* Hereda de .button base */
.controlButton {
  padding: var(--spS) var(--spL); /* 0.5rem 1rem -> 8px 16px */
  border-radius: var(--bRadiusS); /* 0.5rem -> 8px */
  border: var(--bWidth) solid var(--cWhiteV1); /* #a7a7a7 */
  background-color: transparent;
  color: var(--cWhiteV1); /* #a7a7a7 */
  cursor: pointer;
  font-size: var(--sM); /* 14px */
  font-weight: var(--bRegular); /* 400 */
}
.controlButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.controlButton.active {
  background-color: var(--cWhite); /* #f0f0f0 */
  color: var(--cBlackV2); /* #333536 */
  border-color: var(--cWhite);
  font-weight: var(--bMedium); /* 500 */
}

/* --- Estilos para calendario manual (sin react-day-picker) --- */
/* Contenedor principal del calendario generado manualmente */
.calendarGridContainer {
  padding: var(--spL);
  background-color: var(--cBlackV2);
  border-radius: var(--bRadiusS);
  width: 100%;
  color: var(--cWhite);
}

/* Equivalente a rdpCaption */
.calendarNavigation {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 var(--spS);
  margin-bottom: var(--spL);
}

/* Equivalente a rdpCaptionLabel */
.calendarMonthYear {
  font-size: var(--sXl); /* 20px */
  font-weight: var(--bSemibold); /* 600 */
  color: var(--cWhite);
  text-transform: capitalize;
}

/* Equivalente a rdpNavButton */
.calendarNavButton {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: 28px; /* Ajusta tamaño */
  height: 28px; /* Ajusta tamaño */
  background-color: transparent;
  border: var(--bWidth) solid var(--terciary); /* #595959 */
  border-radius: 50%;
  color: var(--cWhite);
  cursor: pointer;
  font-size: var(--sL); /* Tamaño flecha */
}
.calendarNavButton:hover {
  background-color: var(--cBlackV3); /* #393c3f */
  border-color: var(--cWhiteV1);
}

/* Equivalente a rdpHeadRow */
.calendarWeekdays {
  display: flex;
  justify-content: space-around;
  margin-bottom: var(--spS);
  padding-bottom: var(--spS);
  border-bottom: var(--bWidth) solid var(--cBlackV3); /* #393c3f */
}

/* Equivalente a rdpHeadCell */
.calendarWeekday {
  flex: 1;
  text-align: center;
  font-size: var(--sL); /* 16px */
  font-weight: var(--bMedium); /* 500 */
  color: var(--cWhiteV1); /* #a7a7a7 */
  height: 26px;
  box-sizing: border-box;
}

/* Equivalente a rdpTbody */
.calendarDaysGrid {
  display: flex;
  flex-wrap: wrap;
}

/* Equivalente a rdpCell */
.calendarDayCell {
  flex-basis: calc(100% / 7);
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 1px 0;
  height: 40px;
  position: relative;
}

/* Equivalente a rdpDay (el botón) */
.calendarDayButton {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 36px;
  height: 36px;
  border-radius: 50%; /* Circular */
  border: var(--bWidth) solid transparent;
  background-color: transparent;
  cursor: pointer;
  font-size: var(--sL); /* 16px */
  font-weight: var(--bMedium); /* 500 */
  color: var(--cWhiteV1); /* #a7a7a7 (Color por defecto días mes actual) */
  transition: background-color 0.2s, color 0.2s, border-color 0.2s, box-shadow 0.2s;
  position: relative;
  z-index: 1;
}
.calendarDayButton:hover:not(:disabled) {
  background-color: var(--cBlackV3); /* #393c3f (Hover sutil) */
}

/* Día seleccionado */
.calendarDayButton.selectedDay {
  background-color: transparent !important;
  color: var(--cAccent) !important; /* #00e38c */
  font-weight: var(--bBold); /* 700 */
  border: var(--bWidth) solid var(--cAccent); /* Borde verde */
  /* box-shadow: 0 0 8px var(--cAccent); Efecto neón opcional */
}
.calendarDayButton.selectedDay:hover:not(:disabled) {
   background-color: transparent !important;
}

/* Día ocupado (con punto rojo) */
.calendarDayButton.busyDay::after {
  content: '';
  position: absolute;
  bottom: 4px;
  left: 50%;
  transform: translateX(-50%);
  width: 5px;
  height: 5px;
  border-radius: 50%;
  background-color: var(--cError); /* #e46055 */
  z-index: 2;
}
/* Ajusta color del texto si el día ocupado también está seleccionado */
.calendarDayButton.selectedDay.busyDay {
   color: var(--cAccent) !important; /* Mantiene el color neón */
}


/* Día de hoy */
.calendarDayButton.today {
  font-weight: var(--bBold); /* 700 */
  color: var(--cWhite); /* #f0f0f0 */
  /* border: 1px dashed var(--cWhite); Borde opcional */
}
.calendarDayButton.selectedDay.today {
    /* Mantiene estilos de .selectedDay */
}

/* Días fuera del mes */
.calendarDayButton.outsideDay {
  color: var(--cBlackV3) !important; /* #393c3f (Color muy apagado) */
  cursor: default;
  pointer-events: none; /* No interactivo */
}
.calendarDayButton.outsideDay:hover {
    background-color: transparent;
}

/* Días deshabilitados (pasados o no del mes) */
.calendarDayButton:disabled,
.calendarDayButton.disabledDay /* Clase explícita si la añades */
{
  color: var(--terciary) !important; /* #595959 (Color deshabilitado) */
  cursor: not-allowed;
  pointer-events: none; /* Asegura no interactividad */
  /* text-decoration: line-through; Opcional */
  background-color: transparent !important; /* Sin fondo */
  border-color: transparent !important; /* Sin borde */
}
.calendarDayButton:disabled:hover {
    background-color: transparent; /* Sin hover */
}

/* --- Estilos Secciones debajo del calendario --- */
.durationSection, .peopleSection {
  margin-top: var(--spXl); /* 1.5rem -> 24px */
  padding-top: var(--spXl); /* 1.5rem -> 24px */
  border-top: var(--bWidth) solid var(--cBlackV3); /* #414141 */
}

/* Ajustes menores si son necesarios */
.errorText {
  margin-top: var(--spS); /* 8px */
}

.periodSelectionContainer {
  display: flex;
  flex-wrap: wrap; /* Permite que los botones pasen a la siguiente línea */
  gap: var(--spS); /* Espacio entre botones */
  margin-top: var(--spS);
}

.periodButton {
  padding: var(--spS) var(--spM);
  border: 1px solid var(--cWhiteV1); /* Borde por defecto */
  background-color: transparent; /* Fondo transparente */
  color: var(--cWhite); /* Color de texto */
  border-radius: var(--bRadiusS);
  cursor: pointer;
  transition: background-color 0.2s ease, border-color 0.2s ease;
  font-size: var(--sS); /* Ajusta tamaño de fuente */
}

.periodButton:hover {
  border-color: var(--accent); /* Borde cambia al hacer hover */
  background-color: rgba(var(--accentRGB), 0.1); /* Fondo suave al hover */
}

.periodButton.selectedPeriod {
  background-color: var(--accent); /* Fondo del botón seleccionado */
  color: var(--cBlack); /* Color de texto del botón seleccionado */
  border-color: var(--accent); /* Borde del botón seleccionado */
  font-weight: var(--bMedium);
}

/* Clases de Texto Auxiliares (si no las tienes ya) */
.loadingText {
    display: block;
    margin-top: var(--spS);
    color: var(--cWhiteV1);
    font-style: italic;
}

.warningText {
    display: block;
    margin-top: var(--spS);
    color: var(--cWarning); /* Asegúrate de tener esta variable */
}

/* Asegúrate que el contenedor de errores se muestre bien */
.errorText {
    color: var(--cError); /* Asegúrate de tener esta variable */
    font-size: var(--sS);
    display: block;
    margin-top: 4px;
    width: 100%; /* Para que ocupe el ancho bajo los botones */
}

/* Ajustes al contenedor de la sección de duración si es necesario */
.durationSection {
    margin-top: var(--spL); /* Añade espacio arriba */
}